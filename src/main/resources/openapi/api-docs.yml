openapi: 3.0.0
info:
  title: User Service - OpenAPI 1.0
  version: 1.0.0
servers:
  - url: http://localhost:8080/
tags:
  - name: User
    description: User API
paths:

  /api/v1/user/registration:
    post:
      operationId: registrationNewUser
      summary: Registration new user
      tags:
        - User
      requestBody:
        description: Registration User DTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationUserDto'
        required: true
      responses:
        '201':
          description: created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '400':
          description: Invalid request
        '404':
          description: Resource not found
        '405':
          description: Method is not available
        '500':
          description: Server error

  /api/v1/users/name/{filter}&page={page}&size={size}:
    get:
      operationId: UsersByName
      summary: Find users by name
      tags:
        - User
      parameters:
        - in: path
          name: filter
          required: true
          schema:
            type: string
        - in: path
          name: page
          required: true
          schema:
            type: integer
            nullable: false
        - in: path
          name: size
          required: true
          schema:
            type: integer
            nullable: false
      responses:
        '200':
          description: Get all users by name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDtoPage'
        '400':
          description: Invalid request
        '404':
          description: Resource not found
        '405':
          description: Method is not available
        '500':
          description: Server error

  /api/v1/users/emailAndPhone/page={page}&size={size}:
    get:
      operationId: UsersWithEmailAndPhone
      summary: Find users all
      tags:
        - User
      parameters:
        - in: path
          name: page
          required: true
          schema:
            type: integer
            nullable: false
        - in: path
          name: size
          required: true
          schema:
            type: integer
            nullable: false
      responses:
        '200':
          description: Get all users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFullDtoPage'
        '400':
          description: Invalid request
        '404':
          description: Resource not found
        '405':
          description: Method is not available
        '500':
          description: Server error

  /api/v1/users/email/{filter}&page={page}&size={size}:
    get:
      operationId: UsersByEmail
      summary: Find users by email
      tags:
        - User
      parameters:
        - in: path
          name: filter
          required: true
          schema:
            type: string
        - in: path
          name: page
          required: true
          schema:
            type: integer
            nullable: false
        - in: path
          name: size
          required: true
          schema:
            type: integer
            nullable: false
      responses:
        '200':
          description: Get all users by email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDtoPage'
        '400':
          description: Invalid request
        '404':
          description: Resource not found
        '405':
          description: Method is not available
        '500':
          description: Server error

  /api/v1/users/balance/{filter}&page={page}&size={size}:
    get:
      operationId: UsersByBalance
      summary: Find users by balance
      tags:
        - User
      parameters:
        - in: path
          name: filter
          required: true
          schema:
            type: string
        - in: path
          name: page
          required: true
          schema:
            type: integer
            nullable: false
        - in: path
          name: size
          required: true
          schema:
            type: integer
            nullable: false
      responses:
        '200':
          description: Get all users by balance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDtoPage'
        '400':
          description: Invalid request
        '404':
          description: Resource not found
        '405':
          description: Method is not available
        '500':
          description: Server error

  /api/v1/users/phone/{filter}&page={page}&size={size}:
    get:
      operationId: UsersByPhone
      summary: Find users by phone
      tags:
        - User
      parameters:
        - in: path
          name: filter
          required: true
          schema:
            type: string
        - in: path
          name: page
          required: true
          schema:
            type: integer
            nullable: false
        - in: path
          name: size
          required: true
          schema:
            type: integer
            nullable: false
      responses:
        '200':
          description: Get all users by phone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDtoPage'
        '400':
          description: Invalid request
        '404':
          description: Resource not found
        '405':
          description: Method is not available
        '500':
          description: Server error

  /api/v1/users/date_start={dateStart}&date_end={dateEnd}&page={page}&size={size}:
    get:
      operationId: UsersByDate
      summary: Find users by date
      tags:
        - User
      parameters:
        - in: path
          name: dateStart
          required: true
          schema:
            type: string
            format: date-time
            nullable: false
        - in: path
          name: dateEnd
          required: true
          schema:
            type: string
            format: date-time
            nullable: false
        - in: path
          name: page
          required: true
          schema:
            type: integer
            nullable: false
        - in: path
          name: size
          required: true
          schema:
            type: integer
            nullable: false
      responses:
        '200':
          description: Get all users by date
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDtoPage'
        '400':
          description: Invalid request
        '404':
          description: Resource not found
        '405':
          description: Method is not available
        '500':
          description: Server error
components:
  schemas:
    # --- User ---
    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: User id
        name:
          type: string
          description: User name
        birthDate:
          type: string
          format: date-time
          description: User birthday

    UserDtoPage:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserDto'
          description: User email
        totalPage:
          type: integer
        currentPage:
          type: integer

    UserFullDtoPage:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/FullUserDto'
          description: User email
        totalPage:
          type: integer
        currentPage:
          type: integer

    RegistrationUserDto:
      type: object
      properties:
        name:
          type: string
          description: User name
        password:
          type: string
          description: User password
        birthDate:
          type: string
          format: date-time
          description: User birthday
        phone:
          type: array
          items:
            $ref: '#/components/schemas/ShortPhoneDto'
          description: Phone number
        email:
          type: array
          items:
            $ref: '#/components/schemas/ShortEmailDto'
          description: User email

    FullUserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: User id
        name:
          type: string
          description: User name
        birthDate:
          type: string
          format: timestamp
          description: User birthday
        phone:
          type: array
          items:
            type: string
        email:
          type: array
          items:
            type: string

    # --- Phone ---
    ShortPhoneDto:
      type: object
      properties:
        phone:
          type: string
          description: Phone number
    # --- Email ---
    ShortEmailDto:
      type: object
      properties:
        email:
          type: string
          description: Email
    # --- Account ---
    AccountDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Account id
        user_id:
          type: integer
          format: int64
          description: User id
        balance:
          type: number
          format: double
          description: User balance
        createdAt:
          type: string
          format: date-time
