plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.openapi.generator' version '6.3.0'
}

group = 'com.hermanvfx'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

ext {
    set('testcontainersVersion', "1.18.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    implementation 'org.springframework.data:spring-data-jpa:3.0.5'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'org.projectlombok:lombok:1.18.20'
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.3.Final"
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

openApiGenerate {
    inputSpec = "$project.rootDir/src/main/resources/openapi/api-docs.yml".toString()
    outputDir = "$buildDir/generated/api" as Object
    generateModelDocumentation = true
    generatorName = "spring"
    library = "spring-boot"
    apiPackage = "com.hermanvfx.springboottestcontainer.controller"
    modelPackage = "com.hermanvfx.springboottestcontainer.dto"
    invokerPackage = "com.hermanvfx.springboottestcontainer.api"
    importMappings = [
            'Phone': 'com.hermanvfx.springboottestcontainer.entity.Phone',
            'Email': 'com.hermanvfx.springboottestcontainer.entity.Email'
    ]
    configOptions = [
            useSpringBoot3: "true",
            useTags: "true",
            java8: "false",
            dateLibrary: "java8",
            interfaceOnly: "true",
            skipDefaultInterface: "true",
            hideGenerationTimestamp: "true",
            serializableModel: "true",
            booleanGetterPrefix: "is",
            openApiNullable: "true",
    ]
}

sourceSets {
    main {
        java {
            srcDir("$buildDir/generated/api/src/main/java")
        }
    }
}

tasks.compileJava {
    dependsOn(tasks.openApiGenerate)
}

test {
    useJUnitPlatform()
}